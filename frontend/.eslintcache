[{"E:\\project work\\Microservice\\frontend\\src\\index.js":"1","E:\\project work\\Microservice\\frontend\\src\\App.js":"2","E:\\project work\\Microservice\\frontend\\src\\reportWebVitals.js":"3","E:\\project work\\Microservice\\frontend\\src\\components\\product.js":"4","E:\\project work\\Microservice\\frontend\\src\\components\\carts.js":"5","E:\\project work\\Microservice\\frontend\\src\\components\\navbar.js":"6","E:\\project work\\Microservice\\frontend\\src\\components\\homepage.js":"7","E:\\project work\\Microservice\\frontend\\src\\components\\cartComponent.js":"8"},{"size":561,"mtime":1609937284361,"results":"9","hashOfConfig":"10"},{"size":776,"mtime":1609937284358,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1609937284361,"results":"12","hashOfConfig":"10"},{"size":1426,"mtime":1611222041981,"results":"13","hashOfConfig":"10"},{"size":5109,"mtime":1611230901830,"results":"14","hashOfConfig":"10"},{"size":1684,"mtime":1609937284360,"results":"15","hashOfConfig":"10"},{"size":1510,"mtime":1611221616794,"results":"16","hashOfConfig":"10"},{"size":958,"mtime":1611226438568,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1jns96g",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"E:\\project work\\Microservice\\frontend\\src\\index.js",[],["39","40"],"E:\\project work\\Microservice\\frontend\\src\\App.js",["41"],"import React from 'react';\r\nimport './App.css';\r\nimport Carts from './components/carts';\r\nimport Homepage from \"./components/homepage\";\r\nimport Navbar from \"./components/navbar\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"\">\r\n                    <Navbar />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Homepage} />\r\n                        <Route path=\"/carts\" component={Carts} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","E:\\project work\\Microservice\\frontend\\src\\reportWebVitals.js",[],"E:\\project work\\Microservice\\frontend\\src\\components\\product.js",[],"E:\\project work\\Microservice\\frontend\\src\\components\\carts.js",["42","43","44","45","46"],"import React from 'react';\r\nimport '../App.css'\r\nimport axios from 'axios';\r\nimport CartComponent from './cartComponent';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Carts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: {},\r\n            totalAmount: 0,\r\n            productSum: 0,\r\n            productItemCount: 0,\r\n            orderResponse: false\r\n        }\r\n        this.handleRemoves = this.handleRemoves.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:3032/carts')\r\n            .then(response => {\r\n                const products = response.data;\r\n                console.log(\"carts page: \"+ JSON.stringify(products));\r\n                //console.log(products[1].product_id);\r\n                this.setState({\r\n                    products : products\r\n                })\r\n            });\r\n    }\r\n\r\n\r\n\r\n    handleCheckoutClick(){\r\n        /*\r\n        * Sending POST to the apiGateway\r\n        * Order request\r\n        * */\r\n        this.customerId = 1;\r\n        axios.post('http://localhost:8080/orderrequest', {\r\n           order_request: \"true\"\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        this.setState({\r\n            orderResponse : true\r\n        })\r\n    }\r\n    handleChange(event){\r\n        const {name,value} = event.target;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n    handleEmptyCart(){\r\n\r\n    }\r\n    /*\r\n    * @param {integer} id\r\n    * */\r\n    handleRemoves(){\r\n\r\n        console.log(\"clicks: \");\r\n\r\n       /* axios.delete('http://localhost:3050/carts/'+id, {\r\n            order_request: \"true\"\r\n        })\r\n            .then(function (response) {\r\n                console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n*/\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(\"carts page\");\r\n        const cartList = [];\r\n        try {\r\n            var temptotal = 0;\r\n            var temp = this.state.products;\r\n            var count = 0;\r\n            temp.map(function (index) {\r\n                if(index.product_price){\r\n                    temptotal = temptotal + parseInt(index.product_price);\r\n                    count+= 1;\r\n                }\r\n                return cartList.push(<CartComponent key={index._id}  id={index._id} img={index.product_img} name={index.product_name} price={index.product_price}/>);\r\n            });\r\n\r\n            this.state.productSum = temptotal;\r\n            if(temptotal>0)\r\n               temptotal += 20;\r\n            this.state.totalAmount = \"\"+temptotal;\r\n            this.state.productItemCount = \"\"+count;\r\n        }\r\n        catch{\r\n            console.log('conversation happening component before mount');\r\n        }\r\n        var orderResponseText;\r\n        if(this.state.orderResponse){\r\n            orderResponseText = \"Successfully order generated\"\r\n            this.state.orderResponse=false;\r\n        }\r\n        return (\r\n            <div className=\"cartpage container\">\r\n                <div className=\"row header\">\r\n                    <h3>Shopping Cart ({this.state.productItemCount} items)</h3>\r\n                    <ul className=\"list-unstyled ml-auto cartpageul\">\r\n                        <li><a onClick={() => this.handleEmptyCart()} className=\"btn btn-outline-danger\" href=\"\">Empty Cart</a></li>\r\n                        <li><Link className=\"btn btn-outline-primary\" to=\"/\">Continue Shopping</Link></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"row cart-content\">\r\n                    <div className=\"col-sm-8 d-flex flex-column cart-body\">\r\n                        {cartList}\r\n                    </div>\r\n                    <div className=\"col-sm-4 cart-amount-body\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Total Amount</h5>\r\n                                <br/>\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">Amount: ${this.state.productSum}</h6>\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">Shipping: $10</h6>\r\n                                <hr/>\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">Total Amount (including VAT): ${this.state.totalAmount}</h6>\r\n                                <br/>\r\n                                <button onClick={() => this.handleCheckoutClick()}  className=\"btn btn-sm btn-block btn-primary\">Checkout</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <p className=\"text-success\">{orderResponseText}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Carts;\r\n","E:\\project work\\Microservice\\frontend\\src\\components\\navbar.js",["47","48"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Navbar extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <header className=\"container\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <a className=\"navbar-brand\" href=\"#\">WebShop (Microservice Demo) <span className=\"smallFont\">Prototype</span></a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                            data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n\r\n                            <li className=\"nav-item active\">\r\n                                <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/\">My Orders</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/carts\">Carts</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nexport default Navbar;\r\n\r\n\r\n","E:\\project work\\Microservice\\frontend\\src\\components\\homepage.js",[],"E:\\project work\\Microservice\\frontend\\src\\components\\cartComponent.js",["49"],"import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass CartComponent extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    handleRemoves(e, id){\r\n        console.log(\"click\" + id);\r\n\r\n        axios.delete('http://localhost:3032/carts/'+id, )\r\n            .then(function (response) {\r\n                console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"cartItem\">\r\n                <img src={this.props.img} className=\"rounded float-left\" alt=\"\"/>\r\n                <h4>{this.props.name}</h4>\r\n                <h5>Price: {this.props.price} €</h5>\r\n                <button onClick={(e, id) => this.handleRemoves(e,this.props.id)} className=\"btn btn-outline-danger btn-sm\">remove</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CartComponent;\r\n\r\n\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":14,"column":5,"nodeType":"56","messageId":"57","endLine":16,"endColumn":6},{"ruleId":"58","severity":1,"message":"59","line":99,"column":13,"nodeType":"60","endLine":99,"endColumn":23},{"ruleId":"58","severity":1,"message":"59","line":102,"column":13,"nodeType":"60","endLine":102,"endColumn":23},{"ruleId":"58","severity":1,"message":"59","line":103,"column":13,"nodeType":"60","endLine":103,"endColumn":23},{"ruleId":"58","severity":1,"message":"59","line":111,"column":13,"nodeType":"60","endLine":111,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":118,"column":29,"nodeType":"63","endLine":118,"endColumn":114},{"ruleId":"54","severity":1,"message":"55","line":6,"column":5,"nodeType":"56","messageId":"57","endLine":8,"endColumn":6},{"ruleId":"61","severity":1,"message":"62","line":13,"column":21,"nodeType":"63","endLine":13,"endColumn":58},{"ruleId":"54","severity":1,"message":"55","line":6,"column":5,"nodeType":"56","messageId":"57","endLine":8,"endColumn":6},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]